Microsoft Windows [Version 10.0.19042.1348]
(c) Microsoft Corporation. All rights reserved.

C:\Users\Thievekan>cd..

C:\Users>cd..

C:\>cd nw

C:\nw>ls
'ls' is not recognized as an internal or external command,
operable program or batch file.

C:\nw>git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

C:\nw>
C:\nw>
C:\nw>
C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git add secondtxt.txt

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git commit -m "nothing changed"
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git push
To https://github.com/thievekan/FirstHub.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\nw>git pull
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 687 bytes | 2.00 KiB/s, done.
From https://github.com/thievekan/FirstHub
   db84ecf..95805a6  main       -> origin/main
Updating db84ecf..95805a6
Fast-forward
 secondtxt.txt | 55 +------------------------------------------------------
 1 file changed, 1 insertion(+), 54 deletions(-)

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   secondtxt.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\nw>git add secondtxt.txt

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   secondtxt.txt


C:\nw>git commit -m "pulled after commit"
[main 23e910b] pulled after commit
 1 file changed, 55 insertions(+), 1 deletion(-)

C:\nw>git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

C:\nw>git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 2 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 639 bytes | 319.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/thievekan/FirstHub.git
   95805a6..23e910b  main -> main

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git pull
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 673 bytes | 2.00 KiB/s, done.
From https://github.com/thievekan/FirstHub
   23e910b..7b807fb  main       -> origin/main
Updating 23e910b..7b807fb
Fast-forward
 thirdfille.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 thirdfille.txt

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git add thirdfile
fatal: pathspec 'thirdfile' did not match any files

C:\nw>git add thirdfile.txt
fatal: pathspec 'thirdfile.txt' did not match any files

C:\nw>git add thirdfille.txt

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   thirdfille.txt


C:\nw>git restore --staged thirdfille
error: pathspec 'thirdfille' did not match any file(s) known to git

C:\nw>git restore --staged thirdfille.txt

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   thirdfille.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\nw>git add thirdfille.txt

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   thirdfille.txt


C:\nw>git commit -m 'added txt from local'
error: pathspec 'txt' did not match any file(s) known to git
error: pathspec 'from' did not match any file(s) known to git
error: pathspec 'local'' did not match any file(s) known to git

C:\nw>git commit -m"added txt from local"
[main 41ae31c] added txt from local
 1 file changed, 1 insertion(+)

C:\nw>git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

C:\nw>git push
To https://github.com/thievekan/FirstHub.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\nw>git pull
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 691 bytes | 2.00 KiB/s, done.
From https://github.com/thievekan/FirstHub
   7b807fb..5ce3496  main       -> origin/main
Auto-merging thirdfille.txt
CONFLICT (content): Merge conflict in thirdfille.txt
Automatic merge failed; fix conflicts and then commit the result.

C:\nw>git push
To https://github.com/thievekan/FirstHub.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\nw>git pull
error: Pulling is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.

C:\nw>git add thirdfille.txt

C:\nw>git status
On branch main
Your branch and 'origin/main' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)

All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:
        modified:   thirdfille.txt


C:\nw>git push
To https://github.com/thievekan/FirstHub.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

C:\nw>git pull
error: You have not concluded your merge (MERGE_HEAD exists).
hint: Please, commit your changes before merging.
fatal: Exiting because of unfinished merge.

C:\nw>git commit -m "conflict merge add commit in local"
[main 683b0e9] conflict merge add commit in local

C:\nw>git status
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

C:\nw>git push
Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 2 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 697 bytes | 77.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/thievekan/FirstHub.git
   5ce3496..683b0e9  main -> main

C:\nw>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\nw>git branch
  branchone
* main

C:\nw>git checkout
Your branch is up to date with 'origin/main'.

C:\nw>git checkout branchone
Switched to branch 'branchone'

C:\nw>git branch
* branchone
  main

C:\nw>git checkout branchone
Already on 'branchone'

C:\nw>git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

C:\nw>git branch -b "secondbr"
error: unknown switch `b'
usage: git branch [<options>] [-r | -a] [--merged] [--no-merged]
   or: git branch [<options>] [-l] [-f] <branch-name> [<start-point>]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track           set up tracking mode (see git-pull(1))
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display object names

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    -c, --copy            copy a branch and its reflog
    -C                    copy a branch, even if target exists
    -l, --list            list branch names
    --show-current        show current branch name
    --create-reflog       create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --format <format>     format to use for the output


C:\nw>git checkout -b "secondbr"
Switched to a new branch 'secondbr'

C:\nw>git branch
  branchone
  main
* secondbr

C:\nw>git checkout

C:\nw>git branch
  branchone
  main
* secondbr

C:\nw>git checkout

C:\nw>git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

C:\nw>git checkout branchone
Switched to branch 'branchone'

C:\nw>git checkout secondbr
Switched to branch 'secondbr'

C:\nw>git status
On branch secondbr
nothing to commit, working tree clean

C:\nw>git push -u origin branchone
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'branchone' on GitHub by visiting:
remote:      https://github.com/thievekan/FirstHub/pull/new/branchone
remote:
To https://github.com/thievekan/FirstHub.git
 * [new branch]      branchone -> branchone
Branch 'branchone' set up to track remote branch 'branchone' from 'origin'.

C:\nw>git push -m branchone
error: unknown switch `m'
usage: git push [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --repo <repository>   repository
    --all                 push all refs
    --mirror              mirror all refs
    -d, --delete          delete refs
    --tags                push tags (can't be used with --all or --mirror)
    -n, --dry-run         dry run
    --porcelain           machine-readable output
    -f, --force           force updates
    --force-with-lease[=<refname>:<expect>]
                          require old value of ref to be at this value
    --force-if-includes   require remote updates to be integrated locally
    --recurse-submodules (check|on-demand|no)
                          control recursive pushing of submodules
    --thin                use thin pack
    --receive-pack <receive-pack>
                          receive pack program
    --exec <receive-pack>
                          receive pack program
    -u, --set-upstream    set upstream for git pull/status
    --progress            force progress reporting
    --prune               prune locally removed refs
    --no-verify           bypass pre-push hook
    --follow-tags         push missing but relevant tags
    --signed[=(yes|no|if-asked)]
                          GPG sign the push
    --atomic              request atomic transaction on remote side
    -o, --push-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only


C:\nw>git push origin branchone
Everything up-to-date

C:\nw>git push origin secondbr
Enumerating objects: 49, done.
Counting objects: 100% (49/49), done.
Delta compression using up to 2 threads
Compressing objects: 100% (32/32), done.
Writing objects: 100% (47/47), 11.22 KiB | 302.00 KiB/s, done.
Total 47 (delta 10), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (10/10), done.
remote:
remote: Create a pull request for 'secondbr' on GitHub by visiting:
remote:      https://github.com/thievekan/FirstHub/pull/new/secondbr
remote:
To https://github.com/thievekan/FirstHub.git
 * [new branch]      secondbr -> secondbr

C:\nw>git push -u origin u
error: src refspec u does not match any
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'

C:\nw>git push -u origin user
error: src refspec user does not match any
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'

C:\nw>git push -u origin feature
error: src refspec feature does not match any
error: failed to push some refs to 'https://github.com/thievekan/FirstHub.git'

C:\nw>git push -u origin branchone
Everything up-to-date
Branch 'branchone' set up to track remote branch 'branchone' from 'origin'.

C:\nw>git checkout thievekan-patch-1
error: pathspec 'thievekan-patch-1' did not match any file(s) known to git

C:\nw>git pull --ff-only
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (4/4), 1.30 KiB | 4.00 KiB/s, done.
From https://github.com/thievekan/FirstHub
   683b0e9..5664201  main              -> origin/main
 * [new branch]      thievekan-patch-1 -> origin/thievekan-patch-1
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> secondbr


C:\nw>git branch
  branchone
  main
* secondbr

C:\nw>git pull thievekan-patch-1
fatal: 'thievekan-patch-1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

C:\nw>git fetch origin

C:\nw>git checkout --track origin/ thievekan-patch-1
fatal: missing branch name; try -b

C:\nw>git checkout --track origin/thievekan-patch-1
Switched to a new branch 'thievekan-patch-1'
Branch 'thievekan-patch-1' set up to track remote branch 'thievekan-patch-1' from 'origin'.

C:\nw>git branch
  branchone
  main
  secondbr
* thievekan-patch-1

C:\nw>git checkout thievekan-patch-1
Already on 'thievekan-patch-1'
Your branch is up to date with 'origin/thievekan-patch-1'.

C:\nw>git checkout --track origin/thievekan-patch-1
fatal: A branch named 'thievekan-patch-1' already exists.

C:\nw>git checkout  origin/thievekan-patch-1
Note: switching to 'origin/thievekan-patch-1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at e81d52c 3rd branch

C:\nw>